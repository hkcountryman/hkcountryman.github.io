{
    "pages": [
        {
            "title": "Installing ltxpng", 
            "text":"Downloading the source code Downloading the latest release with git If you do not have git installed, install it with apt: $ sudo apt install git Navigate to any directory where you would like to download the code. After we run the setup script, it will be safe to delete the download, so it doesn&#39;t really matter. Let&#39;s just go to our home directory: $ cd Now, clone the repository: $ git clone https://github.com/hkcountryman/latex_to_png.git Downloading a release from your browser Find a release here and download either the ZIP or the tarball. Navigate to your Downloads: $ cd ~/Downloads If you downloaded the ZIP: It should be named latex_to_png-x.zip, where x is the version number. If you don&#39;t already have unzip on your system, you may need to run $ sudo apt install unzip Now unzip into your Downloads. If unzip is installed, you should be able to run the following (remembering to replace x with the version number): $ unzip latex_to_png-x.zip If you downloaded the tarball: It should be named latex_to_png-x.tar.gz, where x is the version number. Extract it to your Downloads (remembering to replace x with the version number): $ tar -xf latex_to_png-x.tar.gz Running the setup script Next, regardless of how you downloaded the source code, you must run the setup script. Navigate into the directory you cloned or extracted and run setup.sh: $ cd latex_to_png $ sudo ./setup.sh The script will install dependencies via apt, copy all needed python modules into /usr/local, and create a symbolic link to the program&#39;s entry point in /usr/local/bin so that you can call the program from anywhere. It will also request you tell it where to create texdir, the directory in which all files you create with the program will be located. Note that it will not recognize the tilde: you must use &#34;/home/[your user name here]&#34; instead. Now it is save to navigate out of the downloaded directory and delete it: $ cd .. $ sudo rm -rf latex_to_png If you wish to edit the code: You may want to edit the code for your own uses, in which case you should not delete the latex_to_png folder. A setup_dev.sh script is provided that sets up a virtual environment for you when it is first run. The script can be run and the venv can be activated from within the latex_to_png folder thus: $ ./setup_dev.sh no venv detected, creating one now venv created, activate the script at /venv/bin/activate before running this script again $ . ./venv/bin/activate (venv) $ When you see (venv) preceding your prompt, it has been successfully activated. Deactivate it at any time with (venv) $ deactivate $ All python modules are in the subdirectory latex_to_png within the parent latex_to_png directory. Be aware that any changes you make to the code will not apply to the code that was copied into /usr/local, so the symlink in usr/local/bin cannot be used to test the changes you make. To run the altered code, you can navigate from the parent into the child latex_to_png directory and call ltxpng.py: (venv) $ cd latex_to_png (venv) $ ./ltxpng.py Running ltxpng The first time you run the program, texdir will be created in the location you specified for it during the setup script. From anywhere in your file system, you will be able to run ltxpng to start the program. It requires some flags and/or an argument.", 
            "tags": "docs", 
            "loc": "./installing-ltxpng.html"
        },
        {
            "title": "Formatting a LaTeX document to convert to PNG", 
            "text":"If you&#39;ve checked out the ltxpng GUI, you&#39;ve probably noticed it enforces a specific preamble and certain formatting commands for any .tex file it creates: An explanation for each command follows. \documentclass{article} This defines the type of document we&#39;ll be making. The Comprehensive TeX Archive Network (CTAN) has a good record of the many document classes available, but article is fine for our purposes. \thispagestyle{empty} This command changes the page style for the current page. This is necessary because ltxpng creates a PDF before turning the contents into a PNG. (It is assumed you won&#39;t need more than one page per image.) The empty argument indicates that we don&#39;t want page numbers. If we left it out, the contents of the PDF would be whatever math you format at the top of the page as well as a page number all the way at the bottom of the page. Cropping it to contents would make for a huge image with a lot of blank space in the middle and an unwanted page number at the bottom. \usepackage[active, tightpage]{preview} The preview package allows for extra large PDFs (more space than you would ever need for something being turned into a PNG). Without it, we&#39;d run the risk of math spilling over the margins of a normal page and being unintentionally cropped. % Import packages: This is simply a comment, like anything else that begins with a %. It lets users know they can import packages in the text box that follows (using \usepackage{package name here}). It is vital that this comment not be removed because the program looks for it when parsing existing files in order to reopen them in the GUI (see the source code). \begin{document} Now the preamble is over. This tag indicates the beginning of all the stuff that will actually be renderedâ€”namely, your math. This is another critical line that must not be deleted, not only because we can&#39;t do much if we never begin our document, but because the program looks for this line while parsing existing files. \begin{preview} This tag is necessary to actually use the preview package. % Enter math mode as desired: Another comment, and once again something that can&#39;t be deleted because the program looks for this specific line when parsing existing files. \end{preview} \end{document} For every \begin we must have an \end. So don&#39;t delete these! They&#39;re also needed to parse existing files.", 
            "tags": "docs", 
            "loc": "./formatting-a-latex-d.html"
        },
        {
            "title": "About", 
            "text":"ASU software engineering undergrad. My cat&#39;s name is Neelix and he writes all my code.", 
            "tags": "pages", 
            "loc": "./pages/about.html"
        },
        {
            "title": "Resume", 
            "text":"Education Arizona State University, Mesa, AZ B.S., Software Engineering (anticipated graduation in April 2023), 4.0 GPA Skills test Project Showcase ltxpng A tool to convert LaTeX equations to PNGs. Work Experience Starbucks Coffee Company, Oakland, CA Barista (February 2018-Present)", 
            "tags": "pages", 
            "loc": "./pages/resume.html"
        }        
    ]
}